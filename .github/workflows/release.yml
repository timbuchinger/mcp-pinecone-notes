name: Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Version increment type'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Get current version from pyproject.toml
        id: current_version
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Bump version and push tag
        id: bump_version
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DEFAULT_BUMP: ${{ inputs.bump }}
          INITIAL_VERSION: ${{ steps.current_version.outputs.version }}

      - name: Update pyproject.toml
        run: |
          # More robust sed command that works with both Unix and Windows line endings
          perl -i -pe 's/^version = ".*"/version = "${{ steps.bump_version.outputs.new_tag }}"/' pyproject.toml

      - name: Check for changes
        id: git_status
        run: |
          if [[ -n "$(git status --porcelain pyproject.toml)" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit version update
        if: steps.git_status.outputs.changed == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pyproject.toml
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_tag }}"
          git push
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel
      - name: Build package
        run: python -m build
      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcp-pinecone-notes-${{ steps.bump_version.outputs.new_tag }}-py3-none-any.whl
          path: dist/*.whl

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.whl
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          name: Release ${{ steps.bump_version.outputs.new_tag }}
          draft: true
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
